version: 0.2
run-as: root

phases:

  install:
    commands:
      - echo "Installing app dependencies..."
      - curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.18.9/2020-11-02/bin/linux/amd64/kubectl   
      - chmod +x ./kubectl
      - mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl
      - export PATH=$PATH:$HOME/bin
      - echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc
      - source ~/.bashrc
      - echo "Check kubectl version"
      - kubectl version --short --client

      - echo "Installing eksctl..."
      - curl --location --silent --output eksctl.tar.gz "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_linux_amd64.tar.gz"
      - tar -xzf eksctl.tar.gz -C /tmp
      - mv /tmp/eksctl /usr/local/bin/eksctl
      - chmod +x /usr/local/bin/eksctl
      - echo "Check eksctl version"
      - eksctl version

  pre_build:
    commands:
      - echo "Logging in to Amazon EKS..."
      - aws eks --region $AWS_DEFAULT_REGION update-kubeconfig --name $AWS_CLUSTER_NAME
      - echo "Checking kubectl configuration"
      - kubectl config view --minify
      - echo "Checking kubectl access"
      - kubectl get svc
      - echo "Logging in to Amazon ECR..."
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME
      - echo "Pulling existing image..."
      - docker pull $REPOSITORY_URI:$IMAGE_TAG

  build:
    commands:
      - echo "Build started on `date`"
      - echo "Building the Docker image..."          
      - docker build --cache-from $REPOSITORY_URI:$IMAGE_TAG -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - echo "Tagging the Docker image..."
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $REPOSITORY_URI:$IMAGE_TAG 

  post_build:
    commands:
      - echo "Build completed on `date`"
      - echo "Pushing the Docker image..."
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo "Applying the deployment configuration to EKS..."
      - kubectl apply -f eks_cicd/deployment.yaml
      - echo "Restarting the deployment..."
      - kubectl rollout restart deployment/my-deployment  # Adjust actual deployment name
